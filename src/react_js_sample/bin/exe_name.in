#!/bin/sh

# @CMAKE_INSTALL_PREFIX@/@CATKIN_PACKAGE_BIN_DESTINATION@/@EXE_NAME@

set -eu

readonly this="$(readlink -f "$0")"
readonly here="$(dirname "${this}")"
readonly whatami="$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $*" >&2; }
error() { log "ERROR: $*"; }
warning() { log "WARNING: $*"; }
info() { log "INFO: $*"; }

die() {
    error "$*"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}" || true
    return "${status}"
}

usage() {
    cat <<EOF
Usage: $0 [OPTION]... [-- [NODE_ARGS]...]
Run the @PACKAGE_NAME@ node server.

Options
    -h    print this usage and return success
    --    pass remaining arguments to node process

Examples:

    \$ $0 -h

    \$ $0

EOF
}

# take capability string; return success if present; else return failure
have_capability() {
    capsh --print | grep '^Current' | grep -q "$1"
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

chmod 0755 ${TMPDIR}

while getopts ":h" opt; do
    case "${opt}" in
        h)
            usage
            exit "$?"
            ;;
        :) die "Missing argument: -${OPTARG}" ;;
        \?) die "Invalid option: -${OPTARG}" ;;
    esac
done
shift "$((${OPTIND} - 1))"

if ! command -v node >/dev/null 2>&1; then
    die "missing command: node"
fi

# $CATKIN_PACKAGE_SHARE_DESTINATION == $(rospack find FOO)
if ! pkgdir="$(rospack find @PACKAGE_NAME@)"; then
    die "FAILURE: rospack find @PACKAGE_NAME@"
fi
readonly pkgdir="${pkgdir}"

if ! [ -n "${pkgdir}" ]; then
    die "undefined pkgdir"
fi
info "pkgdir: ${pkgdir}"

if ! [ -d "${pkgdir}" ]; then
    die "missing directory: ${pkgdir}"
fi

if ! [ -f "${pkgdir}/server/server.js" ]; then
    die "missing file: ${pkgdir}/server/server.js"
fi

if have_capability cap_net_bind_service; then
    readonly port="80"
else
    readonly port="3000"
fi

node "${pkgdir}/server/server.js" --port "${port}" $@

exit "$?"
